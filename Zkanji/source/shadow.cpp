//---------------------------------------------------------------------------

#include <vcl.h>
#include "zdefines.h"
#pragma hdrstop

#include "shadow.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)

#ifdef _DEBUG
static TGlobalTest tester1(214);
#endif

const int toplefthW = 27;
const int toplefthH = 29;
const int toplefth[27 * 29] =
{
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16777216, 16777216, 16777216, 16777216, 16777216, 33554432, 33554432, 33554432, 33554432, 33554432, 33554432, 33554432,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16777216, 16777216, 16777216, 16777216, 16777216, 16777216, 16777216, 33554432, 33554432, 33554432, 50331648, 67108864, 67108864, 67108864, 67108864, 67108864, 67108864,
    0, 0, 0, 0, 0, 0, 0, 0, 16777216, 16777216, 16777216, 16777216, 16777216, 33554432, 50331648, 50331648, 50331648, 67108864, 83886080, 83886080, 100663296, 117440512, 117440512, 117440512, 117440512, 117440512, 117440512,
    0, 0, 0, 0, 0, 0, 16777216, 16777216, 16777216, 16777216, 33554432, 50331648, 50331648, 67108864, 67108864, 83886080, 100663296, 117440512, 134217728, 150994944, 150994944, 167772160, 167772160, 184549376, 201326592, 201326592, 201326592,
    0, 0, 0, 0, 0, 16777216, 16777216, 16777216, 33554432, 50331648, 50331648, 67108864, 83886080, 100663296, 117440512, 134217728, 150994944, 184549376, 184549376, 218103808, 218103808, 251658240, 251658240, 251658240, 268435456, 268435456, 268435456,
    0, 0, 0, 0, 16777216, 16777216, 16777216, 33554432, 50331648, 67108864, 83886080, 100663296, 134217728, 150994944, 184549376, 201326592, 234881024, 251658240, 285212672, 301989888, 335544320, 335544320, 352321536, 369098752, 369098752, 385875968, 385875968,
    0, 0, 0, 16777216, 16777216, 16777216, 33554432, 50331648, 67108864, 100663296, 117440512, 150994944, 184549376, 218103808, 251658240, 268435456, 318767104, 335544320, 369098752, 402653184, 436207616, 452984832, 452984832, 486539264, 486539264, 486539264, 503316480,
    0, 0, 16777216, 16777216, 16777216, 33554432, 50331648, 67108864, 100663296, 134217728, 150994944, 184549376, 234881024, 285212672, 318767104, 369098752, 419430400, 452984832, 486539264, 520093696, 553648128, 587202560, 587202560, 620756992, 620756992, 620756992, 637534208,
    0, 0, 16777216, 16777216, 33554432, 50331648, 67108864, 83886080, 117440512, 167772160, 201326592, 251658240, 318767104, 369098752, 419430400, 469762048, 520093696, 570425344, 620756992, 654311424, 687865856, 721420288, 738197504, 754974720, 771751936, 771751936, 805306368,
    0, 16777216, 16777216, 33554432, 50331648, 67108864, 83886080, 117440512, 167772160, 218103808, 268435456, 318767104, 385875968, 452984832, 536870912, 620756992, 704643072, 771751936, 838860800, 889192448, 956301312, 989855744, 1006632960, 1023410176, 1040187392, 1056964608, 1056964608,
    0, 16777216, 16777216, 50331648, 67108864, 83886080, 117440512, 167772160, 218103808, 268435456, 335544320, 419430400, 503316480, 603979776, 704643072, 855638016, 973078528, 1090519040, 1191182336, 1258291200, 1325400064, 1358954496, 1375731712, 1409286144, 1426063360, 1442840576, 1442840576,
    0, 16777216, 16777216, 50331648, 67108864, 117440512, 150994944, 201326592, 268435456, 335544320, 419430400, 520093696, 637534208, 788529152, 989855744, 1174405120, 1358954496, 1543503872, 1660944384, 1744830464, 1811939328, 1845493760, 1862270976, 1895825408, 1912602624, 1929379840, 1929379840,
    0, 16777216, 16777216, 50331648, 67108864, 100663296, 150994944, 218103808, 251658240, 335544320, 419430400, 520093696, 654311424, 956301312, 1258291200, 1577058304, 1895825408, -2030043136, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 16777216, 16777216, 50331648, 83886080, 134217728, 184549376, 251658240, 318767104, 402653184, 503316480, 637534208, 822083584, 1275068416, 1660944384, 1946157056, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 16777216, 33554432, 67108864, 100663296, 150994944, 218103808, 285212672, 369098752, 469762048, 587202560, 754974720, 1023410176, 1593835520, 1946157056, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 33554432, 50331648, 67108864, 117440512, 184549376, 251658240, 318767104, 436207616, 536870912, 687865856, 922746880, 1224736768, 1946157056, -16777216, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    16777216, 33554432, 50331648, 100663296, 150994944, 218103808, 285212672, 369098752, 486539264, 603979776, 771751936, 1056964608, 1442840576, -1811939328, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    16777216, 33554432, 67108864, 117440512, 167772160, 234881024, 335544320, 419430400, 536870912, 671088640, 872415232, 1191182336, 1627389952, -872415232, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    16777216, 50331648, 83886080, 134217728, 184549376, 251658240, 352321536, 452984832, 587202560, 721420288, 956301312, 1291845632, 1744830464, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    16777216, 50331648, 83886080, 150994944, 201326592, 285212672, 385875968, 486539264, 620756992, 771751936, 1023410176, 1392508928, 1845493760, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    16777216, 50331648, 83886080, 150994944, 234881024, 301989888, 419430400, 536870912, 671088640, 805306368, 1073741824, 1459617792, 1929379840, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    33554432, 67108864, 100663296, 167772160, 234881024, 335544320, 452984832, 553648128, 704643072, 855638016, 1124073472, 1509949440, 1979711488, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    33554432, 67108864, 117440512, 167772160, 268435456, 335544320, 469762048, 587202560, 721420288, 889192448, 1174405120, 1543503872, 2030043136, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    33554432, 67108864, 117440512, 167772160, 268435456, 352321536, 469762048, 603979776, 754974720, 905969664, 1191182336, 1560281088, 2046820352, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    33554432, 67108864, 117440512, 184549376, 285212672, 369098752, 503316480, 620756992, 771751936, 939524096, 1224736768, 1593835520, 2063597568, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    33554432, 67108864, 117440512, 201326592, 285212672, 385875968, 503316480, 637534208, 788529152, 956301312, 1241513984, 1610612736, 2080374784, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    33554432, 67108864, 117440512, 201326592, 285212672, 385875968, 503316480, 637534208, 788529152, 973078528, 1258291200, 1627389952, 2097152000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    33554432, 67108864, 117440512, 201326592, 285212672, 385875968, 520093696, 654311424, 805306368, 973078528, 1258291200, 1627389952, 2097152000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    33554432, 67108864, 117440512, 201326592, 285212672, 385875968, 520093696, 654311424, 805306368, 973078528, 1258291200, 1627389952, 2097152000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
};

const int tophW = 1;
const int tophH = 12;
const int toph[1 * 12] =
{
    33554432,
    67108864,
    117440512,
    201326592,
    268435456,
    385875968,
    486539264,
    620756992,
    771751936,
    1056964608,
    1442840576,
    1929379840
};

const int toprighthW = 25;
const int toprighthH = 29;
const int toprighth[25 * 29] =
{
    33554432, 33554432, 33554432, 33554432, 33554432, 16777216, 16777216, 16777216, 16777216, 16777216, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    67108864, 67108864, 67108864, 67108864, 50331648, 33554432, 33554432, 33554432, 16777216, 16777216, 16777216, 16777216, 16777216, 16777216, 16777216, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    117440512, 117440512, 117440512, 117440512, 100663296, 83886080, 83886080, 67108864, 50331648, 50331648, 50331648, 33554432, 16777216, 16777216, 16777216, 16777216, 16777216, 0, 0, 0, 0, 0, 0, 0, 0,
    201326592, 184549376, 167772160, 167772160, 150994944, 150994944, 134217728, 117440512, 100663296, 83886080, 67108864, 67108864, 50331648, 50331648, 33554432, 16777216, 16777216, 16777216, 16777216, 0, 0, 0, 0, 0, 0,
    268435456, 251658240, 251658240, 251658240, 218103808, 218103808, 184549376, 184549376, 150994944, 134217728, 117440512, 100663296, 83886080, 67108864, 50331648, 50331648, 33554432, 16777216, 16777216, 16777216, 0, 0, 0, 0, 0,
    369098752, 369098752, 352321536, 335544320, 335544320, 301989888, 285212672, 251658240, 234881024, 201326592, 184549376, 150994944, 134217728, 100663296, 83886080, 67108864, 50331648, 33554432, 16777216, 16777216, 16777216, 0, 0, 0, 0,
    486539264, 486539264, 452984832, 452984832, 436207616, 402653184, 369098752, 335544320, 318767104, 268435456, 251658240, 218103808, 184549376, 150994944, 117440512, 100663296, 67108864, 50331648, 33554432, 16777216, 16777216, 16777216, 0, 0, 0,
    620756992, 620756992, 587202560, 587202560, 553648128, 520093696, 486539264, 452984832, 419430400, 369098752, 318767104, 285212672, 234881024, 184549376, 150994944, 134217728, 100663296, 67108864, 50331648, 33554432, 16777216, 16777216, 16777216, 0, 0,
    771751936, 754974720, 738197504, 721420288, 687865856, 654311424, 620756992, 570425344, 520093696, 469762048, 419430400, 369098752, 318767104, 251658240, 201326592, 167772160, 117440512, 83886080, 67108864, 50331648, 33554432, 16777216, 16777216, 0, 0,
    1040187392, 1023410176, 989855744, 939524096, 889192448, 822083584, 771751936, 704643072, 654311424, 587202560, 520093696, 452984832, 385875968, 318767104, 268435456, 218103808, 167772160, 117440512, 83886080, 67108864, 50331648, 33554432, 16777216, 16777216, 0,
    1426063360, 1392508928, 1342177280, 1275068416, 1191182336, 1073741824, 973078528, 889192448, 805306368, 721420288, 637534208, 570425344, 486539264, 419430400, 335544320, 268435456, 218103808, 167772160, 117440512, 83886080, 67108864, 50331648, 16777216, 16777216, 0,
    1912602624, 1879048192, 1811939328, 1728053248, 1593835520, 1442840576, 1275068416, 1124073472, 989855744, 872415232, 788529152, 687865856, 603979776, 503316480, 419430400, 335544320, 268435456, 201326592, 150994944, 117440512, 67108864, 50331648, 16777216, 16777216, 0,
    0, 0, 0, -1828716544, -2147483648, 1744830464, 1493172224, 1275068416, 1090519040, 956301312, 838860800, 738197504, 620756992, 536870912, 436207616, 335544320, 268435456, 218103808, 150994944, 100663296, 67108864, 50331648, 16777216, 16777216, 0,
    0, 0, 0, 0, 0, -1946157056, 1879048192, 1560281088, 1308622848, 1124073472, 973078528, 855638016, 738197504, 620756992, 520093696, 402653184, 335544320, 251658240, 184549376, 134217728, 83886080, 50331648, 16777216, 16777216, 0,
    0, 0, 0, 0, 0, 0, -1946157056, 1879048192, 1543503872, 1291845632, 1124073472, 973078528, 838860800, 704643072, 603979776, 486539264, 385875968, 301989888, 218103808, 150994944, 100663296, 67108864, 33554432, 16777216, 0,
    0, 0, 0, 0, 0, 0, 0, -1946157056, 1761607680, 1493172224, 1275068416, 1107296256, 956301312, 822083584, 671088640, 536870912, 436207616, 335544320, 251658240, 184549376, 117440512, 67108864, 50331648, 16777216, 0,
    0, 0, 0, 0, 0, 0, 0, -1409286144, 1962934272, 1644167168, 1392508928, 1224736768, 1056964608, 905969664, 754974720, 620756992, 486539264, 385875968, 285212672, 218103808, 150994944, 83886080, 50331648, 16777216, 16777216,
    0, 0, 0, 0, 0, 0, 0, -872415232, -2130706432, 1795162112, 1526726656, 1325400064, 1157627904, 989855744, 822083584, 687865856, 536870912, 436207616, 335544320, 234881024, 167772160, 100663296, 67108864, 16777216, 16777216,
    0, 0, 0, 0, 0, 0, 0, 0, -1996488704, 1929379840, 1644167168, 1409286144, 1241513984, 1073741824, 889192448, 738197504, 587202560, 469762048, 352321536, 251658240, 184549376, 134217728, 83886080, 33554432, 16777216,
    0, 0, 0, 0, 0, 0, 0, 0, -1895825408, 2030043136, 1728053248, 1493172224, 1325400064, 1140850688, 956301312, 788529152, 637534208, 503316480, 385875968, 285212672, 201326592, 150994944, 83886080, 33554432, 16777216,
    0, 0, 0, 0, 0, 0, 0, 0, -1811939328, 2113929216, 1811939328, 1560281088, 1392508928, 1207959552, 1006632960, 838860800, 671088640, 553648128, 419430400, 301989888, 234881024, 150994944, 83886080, 33554432, 16777216,
    0, 0, 0, 0, 0, 0, 0, 0, -1761607680, -2130706432, 1879048192, 1627389952, 1459617792, 1258291200, 1056964608, 889192448, 721420288, 570425344, 452984832, 335544320, 234881024, 167772160, 100663296, 67108864, 33554432,
    0, 0, 0, 0, 0, 0, 0, 0, -1711276032, -2080374784, 1912602624, 1677721600, 1493172224, 1291845632, 1107296256, 922746880, 738197504, 603979776, 469762048, 352321536, 268435456, 167772160, 117440512, 67108864, 33554432,
    0, 0, 0, 0, 0, 0, 0, 0, -1694498816, -2046820352, 1962934272, 1711276032, 1526726656, 1325400064, 1124073472, 939524096, 771751936, 620756992, 469762048, 352321536, 268435456, 167772160, 117440512, 67108864, 33554432,
    0, 0, 0, 0, 0, 0, 0, 0, 0x9c000000, -2030043136, 1979711488, 1744830464, 1560281088, 1358954496, 1157627904, 973078528, 788529152, 637534208, 503316480, 385875968, 285212672, 184549376, 117440512, 67108864, 33554432,
    0, 0, 0, 0, 0, 0, 0, 0, 0x9c000000, -2013265920, 1996488704, 1761607680, 1577058304, 1375731712, 1174405120, 989855744, 805306368, 654311424, 503316480, 385875968, 285212672, 201326592, 117440512, 67108864, 33554432,
    0, 0, 0, 0, 0, 0, 0, 0, -1660944384, -1996488704, 2013265920, 1761607680, 1593835520, 1392508928, 1191182336, 989855744, 805306368, 654311424, 503316480, 385875968, 285212672, 201326592, 117440512, 67108864, 33554432,
    0, 0, 0, 0, 0, 0, 0, 0, -1660944384, -1996488704, 2013265920, 1778384896, 1593835520, 1392508928, 1191182336, 1006632960, 822083584, 671088640, 520093696, 402653184, 285212672, 201326592, 117440512, 67108864, 33554432,
    0, 0, 0, 0, 0, 0, 0, 0, -1660944384, -1996488704, 2030043136, 1778384896, 1593835520, 1392508928, 1191182336, 1006632960, 822083584, 671088640, 520093696, 402653184, 285212672, 201326592, 117440512, 67108864, 33554432
};

const int righthW = 17;
const int righthH = 1;
const int righth[17 * 1] =
{
    -1644167168, -1996488704, 2030043136, 1778384896, 1610612736, 1409286144, 1207959552, 1006632960, 822083584, 671088640, 520093696, 402653184, 285212672, 201326592, 134217728, 67108864, 33554432
};

const int bottomrighthW = 26;
const int bottomrighthH = 36;
const int bottomrighth[26 * 36] =
{
    0, 0, 0, 0, 0, 0, 0, 0, 0, -1644167168, -1996488704, 2030043136, 1778384896, 1610612736, 1409286144, 1207959552, 1006632960, 838860800, 671088640, 520093696, 402653184, 301989888, 201326592, 134217728, 67108864, 33554432,
    0, 0, 0, 0, 0, 0, 0, 0, 0, -1644167168, -1996488704, 2030043136, 1795162112, 1610612736, 1409286144, 1207959552, 1006632960, 838860800, 671088640, 536870912, 402653184, 301989888, 201326592, 134217728, 67108864, 33554432,
    0, 0, 0, 0, 0, 0, 0, 0, 0, -1644167168, -1996488704, 2030043136, 1795162112, 1610612736, 1409286144, 1207959552, 1006632960, 838860800, 671088640, 536870912, 402653184, 301989888, 201326592, 134217728, 67108864, 33554432,
    0, 0, 0, 0, 0, 0, 0, 0, 0, -1644167168, -1996488704, 2030043136, 1795162112, 1610612736, 1409286144, 1207959552, 1006632960, 838860800, 671088640, 536870912, 402653184, 301989888, 201326592, 134217728, 67108864, 33554432,
    0, 0, 0, 0, 0, 0, 0, 0, 0, -1644167168, -1996488704, 2030043136, 1778384896, 1610612736, 1409286144, 1207959552, 1006632960, 838860800, 671088640, 520093696, 402653184, 285212672, 201326592, 134217728, 67108864, 33554432,
    0, 0, 0, 0, 0, 0, 0, 0, 0, -1644167168, -1996488704, 2030043136, 1778384896, 1610612736, 1409286144, 1207959552, 1006632960, 822083584, 671088640, 520093696, 402653184, 285212672, 201326592, 134217728, 67108864, 33554432,
    0, 0, 0, 0, 0, 0, 0, 0, 0, -1660944384, -1996488704, 2030043136, 1778384896, 1593835520, 1392508928, 1191182336, 1006632960, 822083584, 671088640, 520093696, 402653184, 285212672, 201326592, 117440512, 67108864, 33554432,
    0, 0, 0, 0, 0, 0, 0, 0, 0, -1660944384, -1996488704, 2013265920, 1778384896, 1593835520, 1392508928, 1191182336, 1006632960, 822083584, 671088640, 520093696, 402653184, 285212672, 201326592, 117440512, 67108864, 33554432,
    0, 0, 0, 0, 0, 0, 0, 0, 0, -1660944384, -1996488704, 2013265920, 1761607680, 1593835520, 1392508928, 1191182336, 989855744, 805306368, 654311424, 503316480, 385875968, 285212672, 201326592, 117440512, 67108864, 33554432,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0x9a000000, -2030043136, 1979711488, 1761607680, 1577058304, 1375731712, 1174405120, 989855744, 805306368, 654311424, 503316480, 385875968, 285212672, 201326592, 117440512, 67108864, 33554432,
    0, 0, 0, 0, 0, 0, 0, 0, 0, -1728053248, -2046820352, 1962934272, 1744830464, 1560281088, 1358954496, 1157627904, 973078528, 788529152, 637534208, 503316480, 385875968, 285212672, 184549376, 117440512, 67108864, 33554432,
    0, 0, 0, 0, 0, 0, 0, 0, 0, -1778384896, -2097152000, 1929379840, 1711276032, 1526726656, 1325400064, 1124073472, 939524096, 771751936, 620756992, 469762048, 352321536, 268435456, 167772160, 117440512, 67108864, 33554432,
    0, 0, 0, 0, 0, 0, 0, 0, -1258291200, -1879048192, 2130706432, 1879048192, 1677721600, 1493172224, 1291845632, 1107296256, 922746880, 738197504, 603979776, 469762048, 352321536, 268435456, 167772160, 117440512, 67108864, 33554432,
    0, 0, 0, 0, 0, 0, 0, 0, -1493172224, -1996488704, 2046820352, 1828716544, 1627389952, 1459617792, 1258291200, 1056964608, 889192448, 721420288, 570425344, 452984832, 335544320, 234881024, 167772160, 100663296, 67108864, 33554432,
    0, 0, 0, 0, 0, 0, 0, -1375731712, -1946157056, -2130706432, 1946157056, 1744830464, 1560281088, 1392508928, 1207959552, 1023410176, 838860800, 671088640, 553648128, 419430400, 301989888, 234881024, 150994944, 83886080, 33554432, 16777216,
    0, 0, 0, 0, 0, 0, -1375731712, -1895825408, -2130706432, 2030043136, 1828716544, 1660944384, 1493172224, 1325400064, 1140850688, 956301312, 805306368, 637534208, 503316480, 385875968, 285212672, 201326592, 150994944, 83886080, 33554432, 16777216,
    0, 0, 0, 0, -1224736768, -1459617792, -1929379840, -2130706432, 1962934272, 1912602624, 1744830464, 1577058304, 1409286144, 1241513984, 1073741824, 889192448, 738197504, 587202560, 469762048, 352321536, 251658240, 184549376, 134217728, 83886080, 33554432, 16777216,
    -1577058304, -1593835520, -1644167168, -1694498816, -1811939328, -1929379840, -2063597568, 2080374784, 1929379840, 1778384896, 1644167168, 1493172224, 1325400064, 1157627904, 989855744, 822083584, 671088640, 536870912, 419430400, 318767104, 234881024, 134217728, 83886080, 50331648, 16777216, 16777216,
    -1895825408, -1895825408, -1929379840, -1979711488, -2063597568, 2130706432, 2013265920, 1895825408, 1778384896, 1660944384, 1526726656, 1375731712, 1224736768, 1056964608, 905969664, 738197504, 603979776, 486539264, 369098752, 268435456, 201326592, 134217728, 83886080, 50331648, 16777216, 16777216,
    -2147483648, 2130706432, 2113929216, 2063597568, 1996488704, 1929379840, 1828716544, 1744830464, 1644167168, 1526726656, 1392508928, 1258291200, 1107296256, 956301312, 805306368, 671088640, 536870912, 419430400, 318767104, 234881024, 167772160, 117440512, 67108864, 50331648, 16777216, 0,
    1946157056, 1929379840, 1895825408, 1862270976, 1811939328, 1744830464, 1677721600, 1593835520, 1493172224, 1375731712, 1258291200, 1107296256, 989855744, 855638016, 704643072, 587202560, 469762048, 369098752, 285212672, 201326592, 150994944, 100663296, 67108864, 33554432, 16777216, 0,
    1778384896, 1761607680, 1728053248, 1694498816, 1644167168, 1577058304, 1509949440, 1426063360, 1325400064, 1224736768, 1107296256, 989855744, 872415232, 738197504, 620756992, 520093696, 402653184, 318767104, 234881024, 167772160, 117440512, 83886080, 50331648, 16777216, 16777216, 0,
    1577058304, 1577058304, 1543503872, 1509949440, 1459617792, 1392508928, 1342177280, 1241513984, 1157627904, 1073741824, 956301312, 855638016, 738197504, 637534208, 536870912, 436207616, 335544320, 251658240, 201326592, 150994944, 100663296, 67108864, 50331648, 16777216, 16777216, 0,
    1392508928, 1375731712, 1342177280, 1308622848, 1275068416, 1224736768, 1157627904, 1073741824, 989855744, 905969664, 822083584, 738197504, 637534208, 536870912, 436207616, 352321536, 268435456, 218103808, 167772160, 117440512, 83886080, 50331648, 33554432, 16777216, 16777216, 0,
    1174405120, 1157627904, 1124073472, 1107296256, 1073741824, 1023410176, 973078528, 905969664, 838860800, 754974720, 687865856, 603979776, 520093696, 436207616, 352321536, 285212672, 234881024, 184549376, 134217728, 100663296, 67108864, 50331648, 16777216, 16777216, 0, 0,
    989855744, 973078528, 939524096, 922746880, 889192448, 838860800, 805306368, 738197504, 687865856, 620756992, 536870912, 486539264, 419430400, 352321536, 285212672, 234881024, 184549376, 134217728, 100663296, 67108864, 50331648, 33554432, 16777216, 16777216, 0, 0,
    822083584, 805306368, 788529152, 754974720, 738197504, 687865856, 654311424, 603979776, 553648128, 503316480, 452984832, 385875968, 335544320, 268435456, 218103808, 184549376, 134217728, 100663296, 67108864, 50331648, 33554432, 16777216, 16777216, 0, 0, 0,
    654311424, 637534208, 620756992, 603979776, 570425344, 553648128, 503316480, 469762048, 436207616, 385875968, 335544320, 301989888, 251658240, 218103808, 167772160, 134217728, 100663296, 67108864, 50331648, 33554432, 16777216, 16777216, 16777216, 0, 0, 0,
    520093696, 520093696, 486539264, 486539264, 469762048, 436207616, 385875968, 352321536, 335544320, 285212672, 251658240, 218103808, 184549376, 150994944, 117440512, 100663296, 67108864, 50331648, 33554432, 16777216, 16777216, 16777216, 0, 0, 0, 0,
    402653184, 385875968, 369098752, 352321536, 352321536, 318767104, 301989888, 268435456, 251658240, 218103808, 184549376, 150994944, 134217728, 100663296, 83886080, 67108864, 50331648, 33554432, 16777216, 16777216, 16777216, 0, 0, 0, 0, 0,
    285212672, 285212672, 268435456, 268435456, 234881024, 234881024, 201326592, 201326592, 167772160, 150994944, 134217728, 100663296, 83886080, 67108864, 50331648, 50331648, 33554432, 16777216, 16777216, 16777216, 0, 0, 0, 0, 0, 0,
    201326592, 184549376, 167772160, 167772160, 167772160, 150994944, 150994944, 134217728, 117440512, 100663296, 83886080, 67108864, 50331648, 50331648, 33554432, 16777216, 16777216, 16777216, 16777216, 0, 0, 0, 0, 0, 0, 0,
    117440512, 117440512, 117440512, 117440512, 100663296, 83886080, 83886080, 83886080, 67108864, 67108864, 50331648, 33554432, 16777216, 16777216, 16777216, 16777216, 16777216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    67108864, 67108864, 67108864, 67108864, 67108864, 50331648, 50331648, 50331648, 33554432, 33554432, 33554432, 16777216, 16777216, 16777216, 16777216, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    33554432, 33554432, 33554432, 33554432, 33554432, 33554432, 33554432, 33554432, 33554432, 33554432, 16777216, 16777216, 16777216, 16777216, 16777216, 16777216, 16777216, 16777216, 16777216, 16777216, 16777216, 16777216, 16777216, 16777216, 16777216, 16777216,
    16777216, 16777216, 16777216, 16777216, 16777216, 16777216, 16777216, 16777216, 16777216, 16777216, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
};

const int bottomhW = 1;
const int bottomhH = 19;
const int bottomh[1 * 19] =
{
    -1577058304,
    -1879048192,
    -2130706432,
    1946157056,
    1778384896,
    1593835520,
    1409286144,
    1191182336,
    1006632960,
    822083584,
    654311424,
    520093696,
    402653184,
    285212672,
    201326592,
    117440512,
    67108864,
    33554432,
    16777216
};

const int bottomlefthW = 29;
const int bottomlefthH = 36;
const int bottomlefth[29 * 36] =
{
    33554432, 67108864, 134217728, 201326592, 301989888, 385875968, 520093696, 654311424, 822083584, 973078528, 1258291200, 1644167168, 2113929216, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    33554432, 67108864, 134217728, 201326592, 301989888, 385875968, 536870912, 654311424, 822083584, 973078528, 1258291200, 1644167168, 2113929216, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    33554432, 67108864, 134217728, 201326592, 301989888, 385875968, 536870912, 654311424, 822083584, 973078528, 1258291200, 1644167168, 2113929216, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    33554432, 67108864, 134217728, 201326592, 301989888, 385875968, 536870912, 654311424, 822083584, 973078528, 1258291200, 1644167168, 2113929216, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    33554432, 67108864, 134217728, 201326592, 301989888, 385875968, 520093696, 654311424, 822083584, 973078528, 1258291200, 1644167168, 2113929216, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    33554432, 67108864, 134217728, 201326592, 285212672, 385875968, 520093696, 654311424, 805306368, 973078528, 1258291200, 1644167168, 2113929216, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    33554432, 67108864, 117440512, 201326592, 285212672, 385875968, 520093696, 654311424, 805306368, 973078528, 1258291200, 1627389952, 2097152000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    33554432, 67108864, 117440512, 201326592, 285212672, 385875968, 520093696, 654311424, 805306368, 973078528, 1258291200, 1627389952, 2097152000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    33554432, 67108864, 117440512, 201326592, 285212672, 385875968, 503316480, 637534208, 788529152, 973078528, 1258291200, 1627389952, 2097152000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    33554432, 67108864, 117440512, 201326592, 285212672, 385875968, 503316480, 637534208, 788529152, 956301312, 1241513984, 1610612736, 2063597568, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    33554432, 67108864, 117440512, 184549376, 285212672, 369098752, 503316480, 620756992, 771751936, 939524096, 1191182336, 1560281088, 2013265920, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    33554432, 67108864, 117440512, 167772160, 268435456, 352321536, 469762048, 603979776, 754974720, 905969664, 1157627904, 1493172224, 1929379840, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    33554432, 67108864, 117440512, 167772160, 268435456, 335544320, 469762048, 587202560, 721420288, 889192448, 1124073472, 1426063360, 1811939328, -1677721600, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    33554432, 67108864, 100663296, 167772160, 234881024, 335544320, 452984832, 553648128, 704643072, 855638016, 1056964608, 1325400064, 1677721600, -1946157056, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    16777216, 50331648, 83886080, 150994944, 234881024, 301989888, 419430400, 536870912, 671088640, 805306368, 1006632960, 1241513984, 1543503872, 1912602624, -1795162112, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    16777216, 50331648, 83886080, 150994944, 201326592, 285212672, 385875968, 486539264, 620756992, 771751936, 939524096, 1140850688, 1392508928, 1677721600, 2013265920, -1795162112, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    16777216, 50331648, 83886080, 134217728, 184549376, 251658240, 352321536, 452984832, 587202560, 721420288, 872415232, 1040187392, 1241513984, 1459617792, 1744830464, 2013265920, -1761607680, -1509949440, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    16777216, 16777216, 50331648, 83886080, 134217728, 234881024, 318767104, 419430400, 536870912, 671088640, 822083584, 989855744, 1174405120, 1358954496, 1577058304, 1778384896, 1996488704, -2097152000, -1929379840, -1811939328, -1728053248, -1660944384, -1610612736, -1593835520, -1577058304, -1577058304, -1577058304, -1560281088, -1560281088,
    16777216, 16777216, 50331648, 83886080, 134217728, 201326592, 268435456, 369098752, 486539264, 603979776, 738197504, 905969664, 1056964608, 1241513984, 1409286144, 1560281088, 1744830464, 1895825408, 2046820352, -2147483648, -2046820352, -1996488704, -1929379840, -1912602624, -1895825408, -1895825408, -1879048192, -1879048192, -1879048192,
    0, 16777216, 50331648, 67108864, 117440512, 167772160, 234881024, 318767104, 419430400, 536870912, 671088640, 822083584, 956301312, 1107296256, 1258291200, 1409286144, 1543503872, 1660944384, 1778384896, 1879048192, 1962934272, 2030043136, 2080374784, 2113929216, 2130706432, -2147483648, -2130706432, -2130706432, -2130706432,
    0, 16777216, 33554432, 67108864, 100663296, 150994944, 201326592, 285212672, 369098752, 469762048, 587202560, 721420288, 855638016, 989855744, 1107296256, 1258291200, 1375731712, 1493172224, 1593835520, 1677721600, 1744830464, 1811939328, 1862270976, 1895825408, 1929379840, 1946157056, 1946157056, 1962934272, 1962934272,
    0, 16777216, 16777216, 50331648, 83886080, 117440512, 167772160, 234881024, 318767104, 402653184, 520093696, 620756992, 738197504, 872415232, 989855744, 1107296256, 1224736768, 1325400064, 1426063360, 1509949440, 1577058304, 1644167168, 1694498816, 1728053248, 1761607680, 1778384896, 1778384896, 1795162112, 1795162112,
    0, 16777216, 16777216, 50331648, 67108864, 100663296, 150994944, 201326592, 251658240, 335544320, 436207616, 536870912, 637534208, 738197504, 855638016, 956301312, 1073741824, 1157627904, 1241513984, 1342177280, 1392508928, 1459617792, 1509949440, 1543503872, 1577058304, 1577058304, 1593835520, 1610612736, 1593835520,
    0, 16777216, 16777216, 33554432, 50331648, 83886080, 117440512, 167772160, 218103808, 268435456, 352321536, 436207616, 536870912, 637534208, 721420288, 822083584, 905969664, 989855744, 1073741824, 1157627904, 1224736768, 1275068416, 1308622848, 1342177280, 1375731712, 1392508928, 1409286144, 1409286144, 1409286144,
    0, 0, 16777216, 16777216, 50331648, 67108864, 100663296, 134217728, 184549376, 234881024, 285212672, 352321536, 436207616, 520093696, 603979776, 687865856, 754974720, 838860800, 905969664, 973078528, 1023410176, 1073741824, 1107296256, 1124073472, 1157627904, 1174405120, 1191182336, 1191182336, 1191182336,
    0, 0, 16777216, 16777216, 33554432, 50331648, 67108864, 100663296, 134217728, 184549376, 234881024, 285212672, 352321536, 419430400, 486539264, 536870912, 620756992, 687865856, 738197504, 805306368, 838860800, 889192448, 922746880, 939524096, 973078528, 989855744, 1006632960, 1006632960, 1006632960,
    0, 0, 0, 16777216, 16777216, 33554432, 50331648, 67108864, 100663296, 134217728, 184549376, 218103808, 268435456, 335544320, 385875968, 452984832, 503316480, 553648128, 603979776, 654311424, 687865856, 738197504, 754974720, 788529152, 805306368, 822083584, 822083584, 838860800, 838860800,
    0, 0, 0, 16777216, 16777216, 16777216, 33554432, 50331648, 67108864, 100663296, 134217728, 167772160, 218103808, 251658240, 301989888, 335544320, 385875968, 436207616, 469762048, 503316480, 553648128, 570425344, 603979776, 620756992, 637534208, 654311424, 654311424, 671088640, 671088640,
    0, 0, 0, 0, 16777216, 16777216, 16777216, 33554432, 50331648, 67108864, 100663296, 117440512, 150994944, 184549376, 218103808, 251658240, 285212672, 335544320, 352321536, 385875968, 436207616, 469762048, 486539264, 486539264, 520093696, 520093696, 520093696, 536870912, 536870912,
    0, 0, 0, 0, 0, 16777216, 16777216, 16777216, 33554432, 50331648, 67108864, 83886080, 100663296, 134217728, 150994944, 184549376, 218103808, 251658240, 268435456, 301989888, 318767104, 352321536, 352321536, 369098752, 385875968, 402653184, 402653184, 402653184, 402653184,
    0, 0, 0, 0, 0, 0, 16777216, 16777216, 16777216, 33554432, 50331648, 50331648, 67108864, 83886080, 100663296, 134217728, 150994944, 167772160, 201326592, 201326592, 234881024, 234881024, 268435456, 268435456, 285212672, 285212672, 285212672, 285212672, 285212672,
    0, 0, 0, 0, 0, 0, 0, 16777216, 16777216, 16777216, 16777216, 33554432, 50331648, 50331648, 67108864, 83886080, 100663296, 117440512, 134217728, 150994944, 150994944, 167772160, 167772160, 167772160, 184549376, 201326592, 201326592, 201326592, 201326592,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 16777216, 16777216, 16777216, 16777216, 16777216, 33554432, 50331648, 67108864, 67108864, 83886080, 83886080, 83886080, 100663296, 117440512, 117440512, 117440512, 117440512, 117440512, 117440512, 117440512,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16777216, 16777216, 16777216, 16777216, 33554432, 33554432, 33554432, 50331648, 50331648, 50331648, 67108864, 67108864, 67108864, 67108864, 67108864, 67108864, 67108864, 67108864,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16777216, 16777216, 16777216, 16777216, 16777216, 33554432, 33554432, 33554432, 33554432, 33554432, 33554432, 33554432, 33554432,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16777216, 16777216, 16777216, 16777216, 16777216, 16777216, 16777216
};

const int lefthW = 13;
const int lefthH = 1;
const int lefth[13 * 1] =
{
    33554432, 67108864, 134217728, 201326592, 285212672, 385875968, 520093696, 654311424, 805306368, 973078528, 1258291200, 1644167168, 2113929216
};

const int topleftnW = 20;
const int topleftnH = 19;
const int topleftn[20 * 19] =
{
    0, 0, 0, 0, 0, 0, 0, 0, 16777216, 16777216, 16777216, 16777216, 16777216, 16777216, 16777216, 16777216, 16777216, 16777216, 16777216, 16777216,
    0, 0, 0, 0, 0, 0, 16777216, 16777216, 16777216, 16777216, 33554432, 33554432, 50331648, 67108864, 67108864, 67108864, 67108864, 83886080, 83886080, 83886080,
    0, 0, 0, 0, 16777216, 16777216, 16777216, 16777216, 33554432, 50331648, 67108864, 67108864, 100663296, 100663296, 134217728, 150994944, 150994944, 150994944, 150994944, 150994944,
    0, 0, 0, 16777216, 16777216, 16777216, 33554432, 33554432, 67108864, 100663296, 134217728, 150994944, 184549376, 201326592, 218103808, 234881024, 234881024, 251658240, 251658240, 251658240,
    0, 0, 16777216, 16777216, 16777216, 33554432, 50331648, 83886080, 134217728, 167772160, 201326592, 251658240, 285212672, 318767104, 335544320, 369098752, 369098752, 369098752, 385875968, 385875968,
    0, 0, 16777216, 16777216, 33554432, 67108864, 100663296, 134217728, 201326592, 251658240, 318767104, 402653184, 469762048, 520093696, 553648128, 587202560, 603979776, 603979776, 603979776, 603979776,
    0, 0, 16777216, 16777216, 50331648, 100663296, 150994944, 218103808, 301989888, 402653184, 536870912, 654311424, 771751936, 838860800, 889192448, 922746880, 939524096, 939524096, 939524096, 956301312,
    0, 16777216, 16777216, 33554432, 83886080, 134217728, 218103808, 335544320, 436207616, 436207616, 838860800, 1207959552, 0, 0, 0, 0, 0, 0, 0, 0,
    16777216, 16777216, 33554432, 67108864, 134217728, 201326592, 301989888, 452984832, 587202560, 1426063360, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    16777216, 16777216, 50331648, 100663296, 167772160, 251658240, 402653184, 553648128, 1426063360, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    16777216, 33554432, 67108864, 134217728, 201326592, 318767104, 536870912, 989855744, -2147483648, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    16777216, 33554432, 67108864, 150994944, 251658240, 402653184, 654311424, 1291845632, -2147483648, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    16777216, 50331648, 100663296, 184549376, 285212672, 469762048, 771751936, -1728053248, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    16777216, 67108864, 100663296, 201326592, 318767104, 536870912, 838860800, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    16777216, 67108864, 134217728, 218103808, 335544320, 553648128, 889192448, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    16777216, 67108864, 150994944, 234881024, 369098752, 587202560, 922746880, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    16777216, 83886080, 150994944, 234881024, 369098752, 603979776, 939524096, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    16777216, 83886080, 150994944, 251658240, 369098752, 603979776, 939524096, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    16777216, 83886080, 150994944, 251658240, 385875968, 603979776, 939524096, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
};

const int topnW = 1;
const int topnH = 7;
const int topn[1 * 7] =
{
    16777216,
    83886080,
    150994944,
    251658240,
    385875968,
    603979776,
    939524096
};

const int toprightnW = 17;
const int toprightnH = 18;
const int toprightn[17 * 18] =
{
    16777216, 16777216, 16777216, 16777216, 16777216, 16777216, 16777216, 16777216, 16777216, 16777216, 0, 0, 0, 0, 0, 0, 0,
    83886080, 67108864, 67108864, 67108864, 67108864, 50331648, 33554432, 33554432, 16777216, 16777216, 16777216, 16777216, 0, 0, 0, 0, 0,
    150994944, 150994944, 150994944, 134217728, 100663296, 100663296, 67108864, 67108864, 50331648, 33554432, 16777216, 16777216, 16777216, 16777216, 0, 0, 0,
    251658240, 234881024, 234881024, 218103808, 201326592, 184549376, 150994944, 134217728, 100663296, 67108864, 33554432, 33554432, 16777216, 16777216, 16777216, 0, 0,
    369098752, 369098752, 369098752, 335544320, 318767104, 285212672, 251658240, 201326592, 167772160, 134217728, 83886080, 50331648, 33554432, 16777216, 16777216, 16777216, 0,
    603979776, 603979776, 587202560, 536870912, 486539264, 436207616, 369098752, 301989888, 251658240, 201326592, 134217728, 100663296, 67108864, 33554432, 16777216, 16777216, 0,
    939524096, 939524096, 889192448, 838860800, 754974720, 671088640, 536870912, 452984832, 352321536, 285212672, 201326592, 150994944, 100663296, 50331648, 16777216, 16777216, 0,
    0, 0, 0, 1560281088, 855638016, 872415232, 754974720, 637534208, 419430400, 301989888, 201326592, 150994944, 83886080, 50331648, 16777216, 16777216, 0,
    0, 0, 0, 0, 0, 1610612736, 939524096, 788529152, 553648128, 402653184, 285212672, 201326592, 134217728, 67108864, 33554432, 16777216, 16777216,
    0, 0, 0, 0, 0, 0, 1610612736, 939524096, 671088640, 503316480, 369098752, 251658240, 167772160, 100663296, 50331648, 16777216, 16777216,
    0, 0, 0, 0, 0, 0, 0, 1207959552, 822083584, 603979776, 452984832, 318767104, 218103808, 134217728, 67108864, 33554432, 16777216,
    0, 0, 0, 0, 0, 0, 0, 1778384896, 956301312, 704643072, 520093696, 369098752, 251658240, 150994944, 67108864, 33554432, 16777216,
    0, 0, 0, 0, 0, 0, 0, -1728053248, 1073741824, 805306368, 587202560, 419430400, 285212672, 184549376, 100663296, 50331648, 16777216,
    0, 0, 0, 0, 0, 0, 0, 0, 1157627904, 872415232, 637534208, 469762048, 335544320, 201326592, 100663296, 67108864, 16777216,
    0, 0, 0, 0, 0, 0, 0, 0, 1207959552, 905969664, 671088640, 503316480, 352321536, 234881024, 134217728, 67108864, 16777216,
    0, 0, 0, 0, 0, 0, 0, 0, 1224736768, 939524096, 687865856, 520093696, 385875968, 251658240, 150994944, 67108864, 16777216,
    0, 0, 0, 0, 0, 0, 0, 0, 1241513984, 956301312, 721420288, 536870912, 385875968, 251658240, 150994944, 67108864, 16777216,
    0, 0, 0, 0, 0, 0, 0, 0, 1258291200, 956301312, 738197504, 553648128, 385875968, 251658240, 150994944, 67108864, 16777216
};

const int rightnW = 9;
const int rightnH = 1;
const int rightn[9 * 1] =
{
    1258291200, 973078528, 738197504, 553648128, 402653184, 251658240, 150994944, 67108864, 16777216
};

const int bottomrightnW = 17;
const int bottomrightnH = 18;
const int bottomrightn[17 * 18] =
{
    0, 0, 0, 0, 0, 0, 0, 0, 1241513984, 956301312, 738197504, 553648128, 385875968, 251658240, 150994944, 67108864, 16777216,
    0, 0, 0, 0, 0, 0, 0, 0, 1224736768, 956301312, 721420288, 536870912, 385875968, 251658240, 150994944, 67108864, 16777216,
    0, 0, 0, 0, 0, 0, 0, 0, 1224736768, 939524096, 687865856, 520093696, 385875968, 251658240, 150994944, 67108864, 16777216,
    0, 0, 0, 0, 0, 0, 0, 0, 1157627904, 905969664, 671088640, 503316480, 352321536, 234881024, 134217728, 67108864, 16777216,
    0, 0, 0, 0, 0, 0, 0, 1744830464, 1090519040, 838860800, 637534208, 469762048, 335544320, 201326592, 100663296, 67108864, 16777216,
    0, 0, 0, 0, 0, 0, 0, 1006632960, 989855744, 771751936, 587202560, 419430400, 285212672, 184549376, 100663296, 50331648, 16777216,
    0, 0, 0, 0, 0, 0, 1694498816, 1056964608, 872415232, 687865856, 520093696, 369098752, 251658240, 150994944, 67108864, 33554432, 16777216,
    0, 0, 0, 0, 0, 1694498816, 1073741824, 973078528, 771751936, 603979776, 452984832, 318767104, 218103808, 134217728, 67108864, 33554432, 16777216,
    0, 0, 0, 1744830464, 1023410176, 1073741824, 973078528, 889192448, 654311424, 503316480, 369098752, 268435456, 167772160, 100663296, 50331648, 16777216, 16777216,
    1241513984, 1241513984, 1224736768, 1157627904, 1090519040, 989855744, 872415232, 771751936, 654311424, 520093696, 419430400, 301989888, 201326592, 134217728, 67108864, 16777216, 16777216,
    956301312, 956301312, 939524096, 905969664, 838860800, 771751936, 687865856, 603979776, 503316480, 419430400, 301989888, 218103808, 150994944, 83886080, 50331648, 16777216, 16777216,
    738197504, 721420288, 687865856, 671088640, 637534208, 587202560, 520093696, 452984832, 369098752, 301989888, 218103808, 150994944, 100663296, 67108864, 33554432, 16777216, 16777216,
    553648128, 536870912, 520093696, 503316480, 469762048, 419430400, 369098752, 318767104, 268435456, 201326592, 150994944, 100663296, 67108864, 33554432, 16777216, 16777216, 0,
    385875968, 385875968, 385875968, 352321536, 335544320, 285212672, 251658240, 218103808, 167772160, 134217728, 83886080, 50331648, 33554432, 16777216, 16777216, 16777216, 0,
    251658240, 251658240, 251658240, 234881024, 201326592, 184549376, 150994944, 134217728, 100663296, 67108864, 33554432, 33554432, 16777216, 16777216, 16777216, 0, 0,
    150994944, 150994944, 150994944, 134217728, 100663296, 100663296, 67108864, 67108864, 50331648, 33554432, 16777216, 16777216, 16777216, 16777216, 0, 0, 0,
    67108864, 67108864, 67108864, 67108864, 67108864, 50331648, 33554432, 33554432, 16777216, 16777216, 16777216, 16777216, 0, 0, 0, 0, 0,
    16777216, 16777216, 16777216, 16777216, 16777216, 16777216, 16777216, 16777216, 16777216, 16777216, 0, 0, 0, 0, 0, 0, 0
};

const int bottomnW = 1;
const int bottomnH = 9;
const int bottomn[1 * 9] =
{
    1258291200,
    973078528,
    738197504,
    553648128,
    402653184,
    251658240,
    150994944,
    67108864,
    16777216
};

const int bottomleftnW = 20;
const int bottomleftnH = 19;
const int bottomleftn[20 * 19] =
{
    16777216, 83886080, 150994944, 251658240, 385875968, 603979776, 939524096, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    16777216, 83886080, 150994944, 251658240, 369098752, 603979776, 939524096, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    16777216, 83886080, 150994944, 234881024, 369098752, 603979776, 939524096, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    16777216, 67108864, 150994944, 234881024, 369098752, 587202560, 889192448, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    16777216, 67108864, 134217728, 218103808, 335544320, 536870912, 838860800, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    16777216, 67108864, 100663296, 201326592, 318767104, 486539264, 754974720, 1442840576, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    16777216, 50331648, 100663296, 184549376, 285212672, 436207616, 671088640, 1207959552, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    16777216, 33554432, 67108864, 150994944, 251658240, 369098752, 536870912, 671088640, 1711276032, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    16777216, 33554432, 67108864, 134217728, 201326592, 301989888, 385875968, 587202560, 704643072, 1711276032, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    16777216, 16777216, 33554432, 67108864, 117440512, 184549376, 268435456, 369098752, 452984832, 704643072, 1040187392, 1526726656, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 16777216, 16777216, 67108864, 134217728, 201326592, 301989888, 419430400, 553648128, 671088640, 822083584, 956301312, 1073741824, 1157627904, 1191182336, 1224736768, 1241513984, 1241513984,
    0, 0, 0, 16777216, 16777216, 50331648, 83886080, 150994944, 218103808, 301989888, 419430400, 503316480, 603979776, 704643072, 805306368, 872415232, 905969664, 939524096, 956301312, 956301312,
    0, 0, 0, 16777216, 16777216, 33554432, 67108864, 100663296, 150994944, 218103808, 301989888, 369098752, 452984832, 520093696, 587202560, 637534208, 671088640, 687865856, 721420288, 738197504,
    0, 0, 0, 0, 16777216, 16777216, 33554432, 67108864, 100663296, 150994944, 201326592, 268435456, 318767104, 369098752, 419430400, 469762048, 503316480, 520093696, 536870912, 553648128,
    0, 0, 0, 0, 16777216, 16777216, 16777216, 33554432, 50331648, 83886080, 134217728, 167772160, 218103808, 251658240, 285212672, 335544320, 352321536, 385875968, 385875968, 385875968,
    0, 0, 0, 0, 0, 16777216, 16777216, 16777216, 33554432, 33554432, 67108864, 100663296, 134217728, 150994944, 184549376, 201326592, 234881024, 251658240, 251658240, 251658240,
    0, 0, 0, 0, 0, 0, 16777216, 16777216, 16777216, 16777216, 33554432, 50331648, 67108864, 67108864, 100663296, 100663296, 134217728, 150994944, 150994944, 150994944,
    0, 0, 0, 0, 0, 0, 0, 0, 16777216, 16777216, 16777216, 16777216, 33554432, 33554432, 50331648, 67108864, 67108864, 67108864, 67108864, 67108864,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16777216, 16777216, 16777216, 16777216, 16777216, 16777216, 16777216, 16777216, 16777216, 16777216
};

const int leftnW = 7;
const int leftnH = 1;
const int leftn[7 * 1] =
{
    16777216, 83886080, 150994944, 251658240, 385875968, 603979776, 956301312
};

//---------------------------------------------------------------------------
__fastcall TBehindShadow::TBehindShadow(TComponent* Owner, TBaseForm *frm) :
        bmp(NULL), form(frm), fleft(0), ftop(0), fwidth(0),
        fheight(0), factive(false), fncactive(false), inherited(Owner)
{
    Name = frm->Name + "Shadow";

    AppActivateEvent(this, activated, true, true);
    AppActivateEvent(this, deactivated, false, true);
    form->AddEvent(this, activated, eltActivate);
    form->AddEvent(this, deactivated, eltDeactivate);

    fncactive = form->Active;
    form->SetWindowProc(this, WProc);
}
//---------------------------------------------------------------------------
__fastcall TBehindShadow::~TBehindShadow()
{
    form->shadow = NULL;

    delete bmp;
    form->RestoreWindowProc(this, WProc);

    if (HandleAllocated() && form->HandleAllocated())
    {
        HWND fparent = (HWND)GetWindowLongPtr(form->Handle, GWLP_HWNDPARENT);
        if (fparent == Handle)
            SetWindowLongPtr(form->Handle, GWLP_HWNDPARENT, GetWindowLongPtr(Handle, GWLP_HWNDPARENT));
    }

    form->RemoveEvents(this);
    AppActivateEvent(this, deactivated, false, false);
    AppActivateEvent(this, activated, true, false);
}
//---------------------------------------------------------------------------
TRect TBehindShadow::dimensions()
{
    bool a = fncactive/*form->Active*/;
    return Rect(form->Left - (a ? 13 : 7), form->Top - (a ? 12 : 7), form->Left + form->Width + (a ? 17 : 7), form->Top + form->Height + (a ? 19 : 9));
}
//---------------------------------------------------------------------------
void __fastcall TBehindShadow::CreateParams(TCreateParams &Params)
{
    inherited::CreateParams(Params);

    Params.Style = WS_POPUP/*| WS_DISABLED*/;
    Params.ExStyle = WS_EX_TOOLWINDOW | WS_EX_TRANSPARENT | WS_EX_LAYERED | /*WS_EX_NOACTIVATE |*/(form->OnTop ? WS_EX_TOPMOST : NULL) | (form->AppWindow ? WS_EX_APPWINDOW : NULL);
    Params.WndParent = NULL;

    AddBiDiModeExStyle(Params.ExStyle);
}
//---------------------------------------------------------------------------
void __fastcall TBehindShadow::WProc(TMessage &msg)
{
    if (msg.Msg == CM_RECREATEWND && form->PopupChildren)
    {
        for (int ix = 0; ix < form->PopupChildren->Count; ++ix)
            if ((TCustomForm*)form->PopupChildren->Items[ix] == form)
            {
                SetWindowLongPtr(Handle, GWLP_HWNDPARENT, (long)NULL);
                break;
            }
    }

    form->CallWindowProc(this, WProc, msg);
    if (msg.Msg == WM_GETTEXT)
        return;

    HWND fparent = NULL;
    bool vis = false;
    bool isapp = false;
    bool ontop = false;
    if (form->HandleAllocated())
    {
        fparent = (HWND)GetWindowLongPtr(form->Handle, GWLP_HWNDPARENT);
        vis = IsWindowVisible(form->Handle);
        long ex = GetWindowLong(form->Handle, GWL_EXSTYLE);
        isapp = ex & WS_EX_APPWINDOW;
        ontop = ex & WS_EX_TOPMOST;
    }

    if (vis && fparent != Handle)
    {
        wchar_t txt[256];
        txt[0] = 0;
        SendMessage(form->Handle, WM_GETTEXT, 256, (long)txt);
        SendMessage(Handle, WM_SETTEXT, 0, (long)txt);
        long ex = GetWindowLong(Handle, GWL_EXSTYLE);
        if (ontop != (ex & WS_EX_TOPMOST))
            SetWindowLong(Handle, GWL_EXSTYLE, ontop ? (ex | WS_EX_TOPMOST) : (ex & ~WS_EX_TOPMOST));
        SetWindowLongPtr(Handle, GWLP_HWNDPARENT, (long)fparent);
        SetWindowLongPtr(form->Handle, GWLP_HWNDPARENT, (long)Handle);
    }
    if (vis && isapp && msg.Msg != WM_STYLECHANGING)
    {
        SetWindowLong(form->Handle, GWL_EXSTYLE, GetWindowLong(form->Handle, GWL_EXSTYLE) & ~WS_EX_APPWINDOW);
        long ex = GetWindowLong(Handle, GWL_EXSTYLE) & ~WS_EX_TOOLWINDOW;
        SetWindowLong(Handle, GWL_EXSTYLE, ex | WS_EX_APPWINDOW);
    }

    if (msg.Msg == WM_SETICON || msg.Msg == WM_SETTEXT)
        SendMessage(Handle, msg.Msg, msg.WParam, msg.LParam);

    if (vis && (msg.Msg == WM_WINDOWPOSCHANGED || msg.Msg == WM_WINDOWPOSCHANGING))
    {
        WINDOWPOS ps = *((WINDOWPOS*)msg.LParam);
        if (!(ps.flags & (SWP_NOMOVE | SWP_NOSIZE)))
        {
            TRect r;
            if (ps.flags & SWP_NOMOVE && ps.flags | SWP_NOSIZE)
                r = Rect(fleft, ftop, fleft + fwidth, ftop + fheight);
            if (ps.flags & SWP_NOMOVE)
                r = Rect(fleft, ftop, fleft + (fncactive ? 13 : 7) + ps.cx + (fncactive ? 17 : 7), ftop + (fncactive ? 12 : 7) + ps.cy + (fncactive ? 19 : 9));
            if (ps.flags & SWP_NOSIZE)
                r = Rect(ps.x - (fncactive ? 13 : 7), ps.y - (fncactive ? 12 : 7), ps.x - (fncactive ? 13 : 7) + fwidth, ps.y - (fncactive ? 12 : 7) + fheight);
            else
                r = Rect(ps.x - (fncactive ? 13 : 7), ps.y - (fncactive ? 12 : 7), ps.x + ps.cx + (fncactive ? 17 : 7), ps.y + ps.cy + (fncactive ? 19 : 9));
            paint(&r);
        }
    }

    if (vis && msg.Msg == WM_NCACTIVATE)
    {
        fncactive = msg.WParam;
        paint();
    }

    if (msg.Msg == CM_SHOWINGCHANGED)
    {
        if (form->Visible)
        {
            fncactive = form->Active;
            ShowWindow(Handle, SW_SHOWNA);
            paint();
        }
        else
        {
            hide();
        }
    }

    if (vis && msg.Msg == WM_ACTIVATE)
        paint();

}
//---------------------------------------------------------------------------
void TBehindShadow::activated(void *caller)
{
    TRect r = dimensions();
    paint();
}
//---------------------------------------------------------------------------
void TBehindShadow::deactivated(void *caller)
{
    TRect r = dimensions();
    paint();
}
//---------------------------------------------------------------------------
void TBehindShadow::wmposchanging(TWMWindowPosChanging &msg)
{
    if (form->HandleAllocated() && form->Visible)
    {
        msg.WindowPos->hwndInsertAfter = form->Handle;
        msg.WindowPos->flags &= ~SWP_NOZORDER;
        msg.WindowPos->flags |= SWP_NOOWNERZORDER;
    }
//msg.WindowPos->flags |= SWP_NOACTIVATE;

    inherited::Dispatch(&msg);
}
//---------------------------------------------------------------------------
void TBehindShadow::wmreschange(TMessage &msg)
{
    paint();
    inherited::Dispatch(&msg);
}
//---------------------------------------------------------------------------
void TBehindShadow::drawbmp(HDC sdc, int w, int h, bool active)
{
    if (!bmp)
    {
        bmp = new TBmp;
        bmp->PixelFormat = pf32bit;
    }
    bmp->SetSize(w, h);

    BITMAPINFO bi;
    memset(&bi, 0, sizeof(bi));
    bi.bmiHeader.biSize = sizeof(bi.bmiHeader);
    bi.bmiHeader.biWidth = w;
    bi.bmiHeader.biHeight = h;
    bi.bmiHeader.biPlanes = 1;
    bi.bmiHeader.biBitCount = 32;
    bi.bmiHeader.biCompression = BI_RGB;

    byte *bits = new byte[w * h * 4];
    memset(bits, 0, w*h*4);

    if (active)
    {
        copybits(bits, 0, 0, h, w, toplefth, toplefthW, toplefthH);
        copybits(bits, w - toprighthW, 0, h, w, toprighth, toprighthW, toprighthH);
        copybits(bits, 0, h - bottomlefthH, h, w, bottomlefth, bottomlefthW, bottomlefthH);
        copybits(bits, w - bottomrighthW, h - bottomrighthH, h, w, bottomrighth, bottomrighthW, bottomrighthH);
        fillbitsh(bits, toplefthW, 0, h, w - toprighthW - toplefthW, w, toph, tophH);
        fillbitsh(bits, bottomlefthW, h - bottomhH, h, w - bottomrighthW - bottomlefthW, w, bottomh, bottomhH);
        fillbitsv(bits, 0, toplefthH, h, h - bottomlefthH - toplefthH, w, lefth, lefthW);
        fillbitsv(bits, w - righthW, toprighthH, h, h - bottomrighthH - toprighthH, w, righth, righthW);
    }
    else
    {
        copybits(bits, 0, 0, h, w, topleftn, topleftnW, topleftnH);
        copybits(bits, w - toprightnW, 0, h, w, toprightn, toprightnW, toprightnH);
        copybits(bits, 0, h - bottomleftnH, h, w, bottomleftn, bottomleftnW, bottomleftnH);
        copybits(bits, w - bottomrightnW, h - bottomrightnH, h, w, bottomrightn, bottomrightnW, bottomrightnH);
        fillbitsh(bits, topleftnW, 0, h, w - toprightnW - topleftnW, w, topn, topnH);
        fillbitsh(bits, bottomleftnW, h - bottomnH, h, w - bottomrightnW - bottomleftnW, w, bottomn, bottomnH);
        fillbitsv(bits, 0, topleftnH, h, h - bottomleftnH - topleftnH, w, leftn, leftnW);
        fillbitsv(bits, w - rightnW, toprightnH, h, h - bottomrightnH - toprightnH, w, rightn, rightnW);
    }

    SetDIBits(sdc, bmp->Handle, 0, h, bits, &bi, DIB_RGB_COLORS);
    delete[] bits;
}
//---------------------------------------------------------------------------
void TBehindShadow::copybits(byte *dest, int x, int y, int h, int linew, const int *src, int cx, int cy)
{
    for (int iy = 0; iy < cy; ++iy)
    {
        int bmpy = h - (iy + y) - 1;
        memcpy(dest + x*4 + linew*4*bmpy, src + cx*iy, cx*4);
    }
}
//---------------------------------------------------------------------------
void TBehindShadow::fillbitsh(byte *dest, int x, int y, int h, int cnt, int linew, const int *src, int cy)
{
    for (int iy = 0; iy < cy; ++iy)
    {
        for (int ix = 0; ix < cnt; ++ix)
        {
            int bmpy = h - (iy + y) - 1;
            dest[(ix + x) * 4 + linew * bmpy * 4 + 3] = ((src[iy] >> 24) & 0xff);
        }
    }
}
//---------------------------------------------------------------------------
void TBehindShadow::fillbitsv(byte *dest, int x, int y, int h, int cnt, int linew, const int *src, int cx)
{
    for (int iy = 0; iy < cnt; ++iy)
    {
        int bmpy = h - (iy + y) - 1;
        memcpy(dest + x*4 + bmpy*4*linew, src, cx*4);
    }
}
//---------------------------------------------------------------------------
void TBehindShadow::paint(TRect *dim)
{
    if (!form->Visible)
        return;

    TRect r = !dim ? dimensions() : *dim;

    if (fleft != r.Left || ftop != r.Top || fwidth != r.Width() || fheight != r.Height())
        SetWindowPos(Handle, form->Handle, r.Left, r.Top, r.Width(), r.Height(), SWP_NOACTIVATE | SWP_NOOWNERZORDER | SWP_NOREDRAW);
    else
        SetWindowPos(Handle, form->Handle, r.Left, r.Top, r.Width(), r.Height(), SWP_NOACTIVATE | SWP_NOMOVE | SWP_NOSIZE | SWP_NOOWNERZORDER | SWP_NOREDRAW);

    HDC dc = GetDC(NULL);
    if (!bmp || fwidth != r.Width() || fheight != r.Height() || /*form->Active*/fncactive != factive)
    {
        drawbmp(dc, r.Width(), r.Height(), fncactive/*form->Active*/);
    }

    fleft = r.Left;
    ftop = r.Top;
    fwidth = r.Width();
    fheight = r.Height();
    factive = fncactive/*form->Active*/;

    TPoint pdst(fleft, ftop);
    TSize size;
    size.cx = fwidth;
    size.cy = fheight;
    TPoint psrc(0, 0);
    BLENDFUNCTION blend;
    blend.BlendFlags = 0;
    blend.BlendOp = AC_SRC_OVER;
    blend.SourceConstantAlpha = 255;
    blend.AlphaFormat = AC_SRC_ALPHA;

    UpdateLayeredWindow(Handle, dc, &pdst, &size, bmp->Canvas->Handle, &psrc, RGB(255, 255, 255), &blend, ULW_ALPHA);

    ReleaseDC(NULL, dc);
}
//---------------------------------------------------------------------------
void TBehindShadow::hide()
{
    BLENDFUNCTION blend;
    blend.BlendFlags = 0;
    blend.BlendOp = AC_SRC_OVER;
    blend.SourceConstantAlpha = 0;
    blend.AlphaFormat = 0;
    UpdateLayeredWindow(Handle, NULL, NULL, NULL, NULL, NULL, NULL, &blend, ULW_ALPHA);
    ShowWindow(Handle, SW_HIDE);

    if (form->MouseInClient)
        SendMessage(form->Handle, WM_MOUSELEAVE, 0, 0);
    else
        for (int ix = 0; ix < form->ComponentCount; ++ix)
        {
            TWinControl *w = dynamic_cast<TWinControl *>(form->Components[ix]);
            if (!w)
                continue;
            if (w->MouseInClient)
                SendMessage(w->Handle, WM_MOUSELEAVE, 0, 0);
        }

    SetWindowLongPtr(form->Handle, GWLP_HWNDPARENT, GetWindowLongPtr(Handle, GWLP_HWNDPARENT));

//form->DestroyHandle();
    DestroyHandle();

    delete bmp;
    bmp = NULL;
}
//---------------------------------------------------------------------------
void TBehindShadow::wmactivate(TMessage &msg)
{
    if (form->HandleAllocated())
        PostMessage(form->Handle, msg.Msg, msg.WParam, msg.LParam);
}
//---------------------------------------------------------------------------

#ifdef _DEBUG
static TGlobalTest tester2(215);
#endif

